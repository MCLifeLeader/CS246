// $Header: /usr/local/cvsroot/courses/cs246/project/java/sudoku/al/TestPuzzle.java,v 1.3 2006/06/24 21:51:13 mbcarey Exp $
package sudoku.al;

import junit.framework.*;

import sudoku.si.*;

import java.util.*;

/**
 * Tests the Sudoku Puzzle class.
 */
public class TestPuzzle
   extends TestCase
{
   /**
    * Creates a new TestPuzzle object.
    */
   public TestPuzzle()
   {
      // intentionally left empty
   }

   /**
    * Initializes this test.
    */
   public void setUp()
   {
   }

   /**
    * Tears down this test.
    */
   public void tearDown()
   {
   }

   /**
    * Tests the Puzzle constructor and gives output
    * suitable for inclusion in the sudoku.config file.
    */
   public void testPuzzleConstructor()
   {
      Collection<Puzzle> puzzles = new ArrayList<Puzzle>();
      puzzles.add(new Puzzle(
            new byte[]
            {
               -2, 1, 6, -5, 7, 8, -4, 3, 9, -4, -7, -3, -9, 6, -2, -1, 8, -5, 9,
               -8, -5, -1, 4, 3, -6, -2, -7, 5, -6, 4, -2, -8, 1, 7, 9, -3, -3,
               2, 7, -4, -9, -5, 8, 6, -1, -1, 9, 8, 7, -3, -6, 2, -5, 4, -8, -3,
               -9, 6, 1, -7, -5, -4, 2, -7, 4, -2, -8, 5, -9, -3, -1, -6, 6, 5,
               -1, 3, 2, -4, 9, 7, -8,
            }, Puzzle.Level.Easy));

      puzzles.add(new Puzzle(
            new byte[]
            {
               -8, -6, 4, -9, -3, 7, 5, 1, 2, 7, 2, 3, -1, -5, -4, -9, 6, -8, 1,
               9, -5, 8, -2, -6, -4, -3, 7, -3, -4, -8, -2, -1, -5, -7, -9, 6, 2,
               5, -7, 6, 4, 9, -3, 8, 1, 9, -1, -6, -3, -7, -8, -2, -5, -4, 6,
               -3, -1, -4, -9, 2, -8, 7, 5, -5, 8, -2, -7, -6, -3, 1, 4, 9, 4, 7,
               9, 5, -8, -1, 6, -2, -3,
            }, Puzzle.Level.Easy));

      puzzles.add(new Puzzle(
            new byte[]
            {
               -2, -8, -3, 5, 7, 4, 1, 9, -6, -5, 6, -9, 3, -2, -1, -7, -4, 8,
               -1, 7, -4, 6, -8, -9, 5, -2, -3, 3, 4, 5, -2, -9, -6, 8, -7, -1,
               6, -9, 8, 7, -1, 5, 4, -3, 2, -7, -1, 2, -8, -4, -3, 6, 5, 9, -9,
               -5, 6, -1, -3, 7, -2, 8, -4, 4, -2, -7, -9, -6, 8, -3, 1, -5, -8,
               3, 1, 4, 5, 2, -9, -6, -7,
            }, Puzzle.Level.Easy));

      puzzles.add(new Puzzle(
            "348925761716348592952716834169584327487239615523167948291873456834652179675491283",
            "000001000111100101110000010100110100000000000001011001010000011101001111000100000",
            Puzzle.Level.Medium));

      puzzles.add(new Puzzle(
            "723854169145967832869321457294785613617432985538619274372196548981543726456278391",
            "000110100000011000001001101011100011001000100110001110101100100000110000001011000",
            Puzzle.Level.Medium));

      puzzles.add(new Puzzle(
            "539824671627153948148976253285461739913785462764392815396548127471239586852617394",
            "101010010001100011001000010101110000010010010000011101010000100110001100010010101",
            Puzzle.Level.Medium));

      puzzles.add(new Puzzle(
            "387264951926153487451789362179348526865912743243675198734896215518427639692531874",
            "100000010010101010000011001000100011001101100110001000100110000010101010010000001      ",
            Puzzle.Level.Hard));

      puzzles.add(new Puzzle(
            "473298516659134827128765394236459178715826439984317652841572963367981245592643781",
            "000100100011101010100010001000000101010010010101000000100010001010101110001001000",
            Puzzle.Level.Hard));

      puzzles.add(new Puzzle(
            "483157962192864735765293481824579613519632874637418529258741396376925148941386257",
            "000000001001101001100110010101010000010010010000010101010011001100101100100000000",
            Puzzle.Level.Hard));

      puzzles.add(new Puzzle(
            "897514623261937854354286179479365218185729436632841795723698541916452387548173962",
            "000010101010100010010001000101010100000101000001010101000100010010001010101010000",
            Puzzle.Level.Evil));

      puzzles.add(new Puzzle(
            "489216375762354918351789462246971853135862794978435621893527146517648239624193587",
            "001000100010001011000110001001000001100101001100000100100011000110100010001000100",
            Puzzle.Level.Evil));

      puzzles.add(new Puzzle(
            "281743596593682417467195382824579631635418279179236845958327164312964758746851923",
            "000000110001100010000110001010010100001000100001010010100011000010001100011000000",
            Puzzle.Level.Evil));

      assertEquals(puzzles.size(), 12);

      for (Puzzle puzzle : puzzles)
      {
         System.out.println(puzzle);
      }

      Config.set("Puzzles", puzzles);
      Config.show();
   }
}
